1. 確保你在 package.json 中安裝了 protractor
1. Polyfill function
   
   ```js
   async function waitForAngular(page) {
     const clientSideScripts = require('protractor/built/clientsidescripts.js');
   
     async function executeScriptAsync(page, script, ...scriptArgs) {
       await page.evaluate(`
         new Promise((resolve, reject) => {
           const callback = (errMessage) => {
             if (errMessage)
               reject(new Error(errMessage));
             else
               resolve();
           };
           (function() {${script}}).apply(null, [...${JSON.stringify(scriptArgs)}, callback]);
         })
       `);
     }
   
     await executeScriptAsync(page, clientSideScripts.waitForAngular, '');
   }
   ```
   
   如果你不想保留一個版本的 protractor，你也可以使用這個更簡單的方法（僅適用於 Angular 2+）:
   
   ```js
   async function waitForAngular(page) {
     await page.evaluate(async () => {
       // @ts-expect-error
       if (window.getAllAngularTestabilities) {
         // @ts-expect-error
         await Promise.all(window.getAllAngularTestabilities().map(whenStable));
         // @ts-expect-error
         async function whenStable(testability) {
           return new Promise(res => testability.whenStable(res));
         }
       }
     });
   }
   ```
   
1. Polyfill usage
   
   ```js
   const page = await context.newPage();
   await page.goto('https://example.org');
   await waitForAngular(page);
   ```