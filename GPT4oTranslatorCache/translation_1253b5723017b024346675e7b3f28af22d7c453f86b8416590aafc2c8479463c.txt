- `options` `Page.WaitForWebSocketOptions` *(optional)*
  - `setPredicate` [Predicate]&lt;[WebSocket]&gt; *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-predicate"/><a href="#page-wait-for-web-socket-option-predicate" class="list-anchor">#</a>
    
    接收 [WebSocket] 物件，並在等待應該解決時解析為真值。
  - `setTimeout` [double] *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-timeout"/><a href="#page-wait-for-web-socket-option-timeout" class="list-anchor">#</a>
    
    最長等待時間（以毫秒為單位）。預設為 `30000`（30 秒）。傳遞 `0` 以禁用超時。可以使用 [BrowserContext.setDefaultTimeout()](https://ollama.com/library#browser-context-set-default-timeout) 更改預設值。
- `callback` [Runnable]<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-callback"/><a href="#page-wait-for-web-socket-option-callback" class="list-anchor">#</a>
  
  執行觸發事件的動作的回調。