- `options` `Page.WaitForNavigationOptions` *(optional)*
  - `setTimeout` [double] *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-navigation-option-timeout"/><a href="#page-wait-for-navigation-option-timeout" class="list-anchor">#</a>
    
    最大操作時間（毫秒），預設為 30 秒，傳入 `0` 以禁用超時。可以使用 [BrowserContext.setDefaultNavigationTimeout()](https://ollama.com/api/class-browsercontext.mdx#browser-context-set-default-navigation-timeout), [BrowserContext.setDefaultTimeout()](https://ollama.com/api/class-browsercontext.mdx#browser-context-set-default-timeout), [Page.setDefaultNavigationTimeout()](https://ollama.com/api/class-page.mdx#page-set-default-navigation-timeout) 或 [Page.setDefaultTimeout()](https://ollama.com/api/class-page.mdx#page-set-default-timeout) 方法更改預設值。
  - `setUrl` [String] | [Pattern] | [Predicate]&lt;[String]&gt; *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-navigation-option-url"/><a href="#page-wait-for-navigation-option-url" class="list-anchor">#</a>
    
    接收 [URL] 的全域模式、正則表達式模式或謂詞以在等待導航時匹配。請注意，如果參數是一個沒有通配符的字串，該方法將等待導航到與該字串完全相等的 URL。
  - `setWaitUntil` `enum WaitUntilState { LOAD, DOMCONTENTLOADED, NETWORKIDLE, COMMIT }` *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-navigation-option-wait-until"/><a href="#page-wait-for-navigation-option-wait-until" class="list-anchor">#</a>
    
    何時認為操作成功，預設為 `load`。事件可以是：
    * `'domcontentloaded'` - 當 `DOMContentLoaded` 事件被觸發時，認為操作已完成。
    * `'load'` - 當 `load` 事件被觸發時，認為操作已完成。
    * `'networkidle'` - **不建議** 當至少 `500` 毫秒內沒有網路連接時，認為操作已完成。不要將此方法用於測試，應依賴網頁斷言來評估準備情況。
    * `'commit'` - 當收到網路響應並且文件開始加載時，認為操作已完成。
- `callback` [Runnable] <font size="2">新增於: v1.9</font><a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-navigation-option-callback"/><a href="#page-wait-for-navigation-option-callback" class="list-anchor">#</a>
  
  執行觸發事件操作的回調函式。