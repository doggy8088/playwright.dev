- `url` [string]<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-goto-option-url"/><a href="#page-goto-option-url" class="list-anchor">#</a>

  導航頁面的 URL。該 url 應包括 scheme，例如 `https://`。當通過 context 選項提供 `baseURL` 並且傳遞的 URL 是路徑時，它將通過[`new URL()`](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) 建構函式合併。
- `options` `PageGotoOptions?` *(可選)*
  - `Referer` [string]? *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-goto-option-referer"/><a href="#page-goto-option-referer" class="list-anchor">#</a>

    Referer 標頭值。如果提供，它將優先於由 [Page.SetExtraHTTPHeadersAsync()](/api/class-page.mdx#page-set-extra-http-headers) 設定的 referer 標頭值。
  - `Timeout` [float]? *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-goto-option-timeout"/><a href="#page-goto-option-timeout" class="list-anchor">#</a>

    最大操作時間（毫秒），預設為 30 秒，傳遞 `0` 以禁用超時。可以使用 [BrowserContext.SetDefaultNavigationTimeout()](/api/class-browsercontext.mdx#browser-context-set-default-navigation-timeout), [BrowserContext.SetDefaultTimeout()](/api/class-browsercontext.mdx#browser-context-set-default-timeout), [Page.SetDefaultNavigationTimeout()](/api/class-page.mdx#page-set-default-navigation-timeout) 或 [Page.SetDefaultTimeout()](/api/class-page.mdx#page-set-default-timeout) 方法更改預設值。
  - `WaitUntil` `enum WaitUntilState { Load, DOMContentLoaded, NetworkIdle, Commit }?` *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-goto-option-wait-until"/><a href="#page-goto-option-wait-until" class="list-anchor">#</a>

    何時認為操作成功，預設為 `load`。事件可以是：
    * `'domcontentloaded'` - 當 `DOMContentLoaded` 事件觸發時，認為操作完成。
    * `'load'` - 當 `load` 事件觸發時，認為操作完成。
    * `'networkidle'` - **不建議** 當至少 `500` 毫秒內沒有網絡連接時，認為操作完成。不要使用此方法進行測試，而是依賴網頁斷言來評估就緒狀態。
    * `'commit'` - 當接收到網絡響應並且文件開始加載時，認為操作完成。