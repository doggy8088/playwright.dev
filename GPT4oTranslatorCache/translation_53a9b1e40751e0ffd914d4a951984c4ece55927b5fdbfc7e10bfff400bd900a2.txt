- `action` [Func]&lt;[Task]&gt; <font size="2">新增於: v1.12</font><a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-action"/><a href="#page-wait-for-web-socket-option-action" class="list-anchor">#</a>

  觸發事件的動作。
- `options` `PageRunAndWaitForWebSocketOptions?` *(可選)*
  - `Predicate` [Func]&lt;[WebSocket]?, bool&gt; *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-predicate"/><a href="#page-wait-for-web-socket-option-predicate" class="list-anchor">#</a>

    接收 [WebSocket] 物件並在應該解決等待時解析為真值。
  - `Timeout` [float]? *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-wait-for-web-socket-option-timeout"/><a href="#page-wait-for-web-socket-option-timeout" class="list-anchor">#</a>

    最長等待時間（毫秒）。預設為 `30000`（30 秒）。傳遞 `0` 以禁用超時。可以使用 [BrowserContext.SetDefaultTimeout()](/api/class-browsercontext#browser-context-set-default-timeout) 更改預設值。