- `url` [string]<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-url"/><a href="#api-request-context-patch-option-url" class="list-anchor">#</a>

  目標 URL。
- `options` [物件] *(可選)*
  - `data` [string] | [Buffer] | [Serializable] *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-data"/><a href="#api-request-context-patch-option-data" class="list-anchor">#</a>

    允許設置請求的 post 資料。如果 data 參數是物件，它將被序列化為 json 字串，並且 `content-type` 標頭將被設置為 `application/json`（如果未明確設置）。否則，`content-type` 標頭將被設置為 `application/octet-stream`（如果未明確設置）。
  - `failOnStatusCode` [boolean] *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-fail-on-status-code"/><a href="#api-request-context-patch-option-fail-on-status-code" class="list-anchor">#</a>

    是否在響應代碼不是 2xx 和 3xx 時拋出異常。預設情況下，對於所有狀態代碼都會返回響應物件。
  - `form` [物件]&lt;[string], [string] | [number] | [boolean]&gt; *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-form"/><a href="#api-request-context-patch-option-form" class="list-anchor">#</a>

    提供一個物件，將使用 `application/x-www-form-urlencoded` 編碼序列化為 html 表單並作為此請求的主體發送。如果指定了此參數，`content-type` 標頭將被設置為 `application/x-www-form-urlencoded`，除非明確提供。
  - `headers` [物件]&lt;[string], [string]&gt; *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-headers"/><a href="#api-request-context-patch-option-headers" class="list-anchor">#</a>

    允許設置 HTTP 標頭。這些標頭將應用於抓取的請求以及由其發起的任何重定向。
  - `ignoreHTTPSErrors` [boolean] *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-ignore-https-errors"/><a href="#api-request-context-patch-option-ignore-https-errors" class="list-anchor">#</a>

    發送網絡請求時是否忽略 HTTPS 錯誤。預設為 `false`。
  - `maxRedirects` [number] *(可選)* <font size="2">新增於: v1.26</font><a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-max-redirects"/><a href="#api-request-context-patch-option-max-redirects" class="list-anchor">#</a>

    將自動跟隨的請求重定向的最大數量。如果超過該數量，將拋出錯誤。預設為 `20`。傳遞 `0` 以不跟隨重定向。
  - `maxRetries` [number] *(可選)* <font size="2">新增於: v1.46</font><a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-max-retries"/><a href="#api-request-context-patch-option-max-retries" class="list-anchor">#</a>

    應重試的網絡錯誤的最大次數。目前僅重試 `ECONNRESET` 錯誤。不會基於 HTTP 響應代碼重試。如果超過限制，將拋出錯誤。預設為 `0` - 不重試。
  - `multipart` [FormData] | [物件]&lt;[string], [string] | [number] | [boolean] | [ReadStream] | [物件]&gt; *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-multipart"/><a href="#api-request-context-patch-option-multipart" class="list-anchor">#</a>
    - `name` [string]

      文件名
    - `mimeType` [string]

      文件類型
    - `buffer` [Buffer]

      文件內容

    提供一個物件，將使用 `multipart/form-data` 編碼序列化為 html 表單並作為此請求的主體發送。如果指定了此參數，`content-type` 標頭將被設置為 `multipart/form-data`，除非明確提供。文件值可以作為 [`fs.ReadStream`](https://nodejs.org/api/fs.html#fs_class_fs_readstream) 或包含文件名、mime 類型及其內容的類文件物件傳遞。
  - `params` [物件]&lt;[string], [string] | [number] | [boolean]&gt; | [URLSearchParams] | [string] *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-params"/><a href="#api-request-context-patch-option-params" class="list-anchor">#</a>

    與 URL 一起發送的查詢參數。
  - `timeout` [number] *(可選)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="api-request-context-patch-option-timeout"/><a href="#api-request-context-patch-option-timeout" class="list-anchor">#</a>

    請求超時時間（毫秒）。預設為 `30000`（30 秒）。傳遞 `0` 以禁用超時。