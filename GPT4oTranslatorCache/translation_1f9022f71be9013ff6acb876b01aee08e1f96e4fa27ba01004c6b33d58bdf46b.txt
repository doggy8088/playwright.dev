- `options` `PageReloadOptions?` *(optional)*
  - `Timeout` [float]? *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-reload-option-timeout"/><a href="#page-reload-option-timeout" class="list-anchor">#</a>
    
    最大操作時間（毫秒），預設為 30 秒，傳遞 `0` 以禁用超時。可以使用 [BrowserContext.SetDefaultNavigationTimeout()](https://ollama.com/library#browser-context-set-default-navigation-timeout), [BrowserContext.SetDefaultTimeout()](https://ollama.com/library#browser-context-set-default-timeout), [Page.SetDefaultNavigationTimeout()](https://ollama.com/library#page-set-default-navigation-timeout) 或 [Page.SetDefaultTimeout()](https://ollama.com/library#page-set-default-timeout) 方法更改預設值。
  - `WaitUntil` `enum WaitUntilState { Load, DOMContentLoaded, NetworkIdle, Commit }?` *(optional)*<a aria-hidden="true" tabIndex="-1" class="list-anchor-link" id="page-reload-option-wait-until"/><a href="#page-reload-option-wait-until" class="list-anchor">#</a>
    
    何時認為操作成功，預設為 `load`。事件可以是：
    * `'domcontentloaded'` - 當 `DOMContentLoaded` 事件觸發時，認為操作完成。
    * `'load'` - 當 `load` 事件觸發時，認為操作完成。
    * `'networkidle'` - **不推薦** 當至少 `500` 毫秒內沒有網路連接時，認為操作完成。不要在測試中使用此方法，應依賴網頁斷言來評估準備狀態。
    * `'commit'` - 當接收到網路回應並且文件開始加載時，認為操作完成。